{"ast":null,"code":"import { getUser, addUser, saveCharactersForUser, getCharactersForUser } from \"./database.js\";\nexport const signup = (username, password) => {\n  if (getUser(username)) {\n    return false;\n  }\n  addUser({\n    username,\n    password,\n    characters: []\n  });\n  return true;\n};\nexport const login = (username, password) => {\n  const user = getUser(username);\n  if (user && user.password === password) {\n    localStorage.setItem(\"isLoggedIn\", \"true\");\n    localStorage.setItem(\"loggedInUser\", username);\n    return true;\n  }\n  return false;\n};\nexport const logout = () => {\n  localStorage.removeItem(\"isLoggedIn\");\n  localStorage.removeItem(\"loggedInUser\");\n};\nexport const isAuthenticated = () => {\n  return localStorage.getItem(\"isLoggedIn\") === \"true\";\n};\nexport const getLoggedInUser = () => {\n  return localStorage.getItem(\"loggedInUser\");\n};\nexport const saveCharacters = characters => {\n  const username = getLoggedInUser();\n  if (username) {\n    saveCharactersForUser(username, characters);\n  }\n};\nexport const getCharacters = () => {\n  const username = getLoggedInUser();\n  if (username) {\n    return getCharactersForUser(username);\n  }\n  return [];\n};","map":{"version":3,"names":["getUser","addUser","saveCharactersForUser","getCharactersForUser","signup","username","password","characters","login","user","localStorage","setItem","logout","removeItem","isAuthenticated","getItem","getLoggedInUser","saveCharacters","getCharacters"],"sources":["C:/Users/Asher Stewart/Desktop/dndapp/dnd-hosting/src/utils/auths.js"],"sourcesContent":["import {\r\n  getUser,\r\n  addUser,\r\n  saveCharactersForUser,\r\n  getCharactersForUser,\r\n} from \"./database.js\";\r\n\r\nexport const signup = (username, password) => {\r\n  if (getUser(username)) {\r\n    return false;\r\n  }\r\n  addUser({ username, password, characters: [] });\r\n  return true;\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  const user = getUser(username);\r\n  if (user && user.password === password) {\r\n    localStorage.setItem(\"isLoggedIn\", \"true\");\r\n    localStorage.setItem(\"loggedInUser\", username);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"isLoggedIn\");\r\n  localStorage.removeItem(\"loggedInUser\");\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return localStorage.getItem(\"isLoggedIn\") === \"true\";\r\n};\r\n\r\nexport const getLoggedInUser = () => {\r\n  return localStorage.getItem(\"loggedInUser\");\r\n};\r\n\r\nexport const saveCharacters = (characters) => {\r\n  const username = getLoggedInUser();\r\n  if (username) {\r\n    saveCharactersForUser(username, characters);\r\n  }\r\n};\r\n\r\nexport const getCharacters = () => {\r\n  const username = getLoggedInUser();\r\n  if (username) {\r\n    return getCharactersForUser(username);\r\n  }\r\n  return [];\r\n};\r\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,OAAO,EACPC,qBAAqB,EACrBC,oBAAoB,QACf,eAAe;AAEtB,OAAO,MAAMC,MAAM,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC5C,IAAIN,OAAO,CAACK,QAAQ,CAAC,EAAE;IACrB,OAAO,KAAK;EACd;EACAJ,OAAO,CAAC;IAAEI,QAAQ;IAAEC,QAAQ;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC;EAC/C,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAACH,QAAQ,EAAEC,QAAQ,KAAK;EAC3C,MAAMG,IAAI,GAAGT,OAAO,CAACK,QAAQ,CAAC;EAC9B,IAAII,IAAI,IAAIA,IAAI,CAACH,QAAQ,KAAKA,QAAQ,EAAE;IACtCI,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;IAC1CD,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,QAAQ,CAAC;IAC9C,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMO,MAAM,GAAGA,CAAA,KAAM;EAC1BF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC;EACrCH,YAAY,CAACG,UAAU,CAAC,cAAc,CAAC;AACzC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOJ,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;AACtD,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAON,YAAY,CAACK,OAAO,CAAC,cAAc,CAAC;AAC7C,CAAC;AAED,OAAO,MAAME,cAAc,GAAIV,UAAU,IAAK;EAC5C,MAAMF,QAAQ,GAAGW,eAAe,CAAC,CAAC;EAClC,IAAIX,QAAQ,EAAE;IACZH,qBAAqB,CAACG,QAAQ,EAAEE,UAAU,CAAC;EAC7C;AACF,CAAC;AAED,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAMb,QAAQ,GAAGW,eAAe,CAAC,CAAC;EAClC,IAAIX,QAAQ,EAAE;IACZ,OAAOF,oBAAoB,CAACE,QAAQ,CAAC;EACvC;EACA,OAAO,EAAE;AACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}